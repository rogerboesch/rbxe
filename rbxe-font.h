/*
 * RBXE | The Pixel Engine by Roger Boesch
 *
 * Copyright (C) 2024 Roger Boesch
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef RB_PIXEL_ENGINE_FONT_H
#define RB_PIXEL_ENGINE_FONT_H

#include <string.h>
#include <rbxe.h>

void rbxeFontInit(void);
void rbxeFontDrawChar(int x, int y, const unsigned char ch, Pixel fg, Pixel bg);
void rbxeFontDrawString(int x, int y, char* str, Pixel fg, Pixel bg);

#ifdef RBXE_ENGINE

/* Speccy font */

unsigned char rbxeFont[] = {
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(0) */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(16) INK */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(17) PAPER */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(18) FLASH */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(19) BRIGHT */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(20) INVERSE */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(21) OVER */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(22) AT */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(23) TAB */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(32) */
	0x0, 0x10, 0x10, 0x10, 0x10, 0x0, 0x10, 0x0, /* ASC(33) */
	0x0, 0x24, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, /* ASC(34) */
	0x0, 0x24, 0x7e, 0x24, 0x24, 0x7e, 0x24, 0x0,  /* ASC(35) */
	0x0, 0x8, 0x3e, 0x28, 0x3e, 0xa, 0x3e, 0x8,  /* ASC(36) */
	0x0, 0x62, 0x64, 0x8, 0x10, 0x26, 0x46, 0x0,  /* ASC(37) */
	0x0, 0x10, 0x28, 0x10, 0x2a, 0x44, 0x3a, 0x0,  /* ASC(38) */
	0x0, 0x8, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(39) */
	0x0, 0x4, 0x8, 0x8, 0x8, 0x8, 0x4, 0x0,  /* ASC(40) */
	0x0, 0x20, 0x10, 0x10, 0x10, 0x10, 0x20, 0x0,  /* ASC(41) */
	0x0, 0x0, 0x14, 0x8, 0x3e, 0x8, 0x14, 0x0,  /* ASC(42) */
	0x0, 0x0, 0x8, 0x8, 0x3e, 0x8, 0x8, 0x0,  /* ASC(43) */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x8, 0x10,  /* ASC(44) */
	0x0, 0x0, 0x0, 0x0, 0x3e, 0x0, 0x0, 0x0,  /* ASC(45) */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x18, 0x0,  /* ASC(46) */
	0x0, 0x0, 0x2, 0x4, 0x8, 0x10, 0x20, 0x0,  /* ASC(47) */
	0x0, 0x3c, 0x46, 0x4a, 0x52, 0x62, 0x3c, 0x0,  /* ASC(48) */
	0x0, 0x18, 0x28, 0x8, 0x8, 0x8, 0x3e, 0x0,  /* ASC(49) */
	0x0, 0x3c, 0x42, 0x2, 0x3c, 0x40, 0x7e, 0x0,  /* ASC(50) */
	0x0, 0x3c, 0x42, 0xc, 0x2, 0x42, 0x3c, 0x0,  /* ASC(51) */
	0x0, 0x8, 0x18, 0x28, 0x48, 0x7e, 0x8, 0x0,  /* ASC(52) */
	0x0, 0x7e, 0x40, 0x7c, 0x2, 0x42, 0x3c, 0x0,  /* ASC(53) */
	0x0, 0x3c, 0x40, 0x7c, 0x42, 0x42, 0x3c, 0x0,  /* ASC(54) */
	0x0, 0x7e, 0x2, 0x4, 0x8, 0x10, 0x10, 0x0,  /* ASC(55) */
	0x0, 0x3c, 0x42, 0x3c, 0x42, 0x42, 0x3c, 0x0,  /* ASC(56) */
	0x0, 0x3c, 0x42, 0x42, 0x3e, 0x2, 0x3c, 0x0,  /* ASC(57) */
	0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x10, 0x0,  /* ASC(58) */
	0x0, 0x0, 0x10, 0x0, 0x0, 0x10, 0x10, 0x20,  /* ASC(59) */
	0x0, 0x0, 0x4, 0x8, 0x10, 0x8, 0x4, 0x0,  /* ASC(60) */
	0x0, 0x0, 0x0, 0x3e, 0x0, 0x3e, 0x0, 0x0,  /* ASC(61) */
	0x0, 0x0, 0x10, 0x8, 0x4, 0x8, 0x10, 0x0,  /* ASC(62) */
	0x0, 0x3c, 0x42, 0x4, 0x8, 0x0, 0x8, 0x0,  /* ASC(63) */
	0x0, 0x3c, 0x4a, 0x56, 0x5e, 0x40, 0x3c, 0x0,  /* ASC(64) */
	0x0, 0x3c, 0x42, 0x42, 0x7e, 0x42, 0x42, 0x0,  /* ASC(65) */
	0x0, 0x7c, 0x42, 0x7c, 0x42, 0x42, 0x7c, 0x0,  /* ASC(66) */
	0x0, 0x3c, 0x42, 0x40, 0x40, 0x42, 0x3c, 0x0,  /* ASC(67) */
	0x0, 0x78, 0x44, 0x42, 0x42, 0x44, 0x78, 0x0,  /* ASC(68) */
	0x0, 0x7e, 0x40, 0x7c, 0x40, 0x40, 0x7e, 0x0,  /* ASC(69) */
	0x0, 0x7e, 0x40, 0x7c, 0x40, 0x40, 0x40, 0x0,  /* ASC(70) */
	0x0, 0x3c, 0x42, 0x40, 0x4e, 0x42, 0x3c, 0x0,  /* ASC(71) */
	0x0, 0x42, 0x42, 0x7e, 0x42, 0x42, 0x42, 0x0,  /* ASC(72) */
	0x0, 0x3e, 0x8, 0x8, 0x8, 0x8, 0x3e, 0x0,  /* ASC(73) */
	0x0, 0x2, 0x2, 0x2, 0x42, 0x42, 0x3c, 0x0,  /* ASC(74) */
	0x0, 0x44, 0x48, 0x70, 0x48, 0x44, 0x42, 0x0,  /* ASC(75) */
	0x0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7e, 0x0,  /* ASC(76) */
	0x0, 0x42, 0x66, 0x5a, 0x42, 0x42, 0x42, 0x0,  /* ASC(77) */
	0x0, 0x42, 0x62, 0x52, 0x4a, 0x46, 0x42, 0x0,  /* ASC(78) */
	0x0, 0x3c, 0x42, 0x42, 0x42, 0x42, 0x3c, 0x0,  /* ASC(79) */
	0x0, 0x7c, 0x42, 0x42, 0x7c, 0x40, 0x40, 0x0,  /* ASC(80) */
	0x0, 0x3c, 0x42, 0x42, 0x52, 0x4a, 0x3c, 0x0,  /* ASC(81) */
	0x0, 0x7c, 0x42, 0x42, 0x7c, 0x44, 0x42, 0x0,  /* ASC(82) */
	0x0, 0x3c, 0x40, 0x3c, 0x2, 0x42, 0x3c, 0x0,  /* ASC(83) */
	0x0, 0xfe, 0x10, 0x10, 0x10, 0x10, 0x10, 0x0,  /* ASC(84) */
	0x0, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3c, 0x0,  /* ASC(85) */
	0x0, 0x42, 0x42, 0x42, 0x42, 0x24, 0x18, 0x0,  /* ASC(86) */
	0x0, 0x42, 0x42, 0x42, 0x42, 0x5a, 0x24, 0x0,  /* ASC(87) */
	0x0, 0x42, 0x24, 0x18, 0x18, 0x24, 0x42, 0x0,  /* ASC(88) */
	0x0, 0x82, 0x44, 0x28, 0x10, 0x10, 0x10, 0x0,  /* ASC(89) */
	0x0, 0x7e, 0x4, 0x8, 0x10, 0x20, 0x7e, 0x0,  /* ASC(90) */
	0x0, 0xe, 0x8, 0x8, 0x8, 0x8, 0xe, 0x0,  /* ASC(91) */
	0x0, 0x0, 0x40, 0x20, 0x10, 0x8, 0x4, 0x0,  /* ASC(92) */
	0x0, 0x70, 0x10, 0x10, 0x10, 0x10, 0x70, 0x0,  /* ASC(93) */
	0x0, 0x10, 0x38, 0x54, 0x10, 0x10, 0x10, 0x0,  /* ASC(94) */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff,  /* ASC(95) */
	0x0, 0x1c, 0x22, 0x78, 0x20, 0x20, 0x7e, 0x0,  /* ASC(96) */
	0x0, 0x0, 0x38, 0x4, 0x3c, 0x44, 0x3c, 0x0,  /* ASC(97) */
	0x0, 0x20, 0x20, 0x3c, 0x22, 0x22, 0x3c, 0x0,  /* ASC(98) */
	0x0, 0x0, 0x1c, 0x20, 0x20, 0x20, 0x1c, 0x0,  /* ASC(99) */
	0x0, 0x4, 0x4, 0x3c, 0x44, 0x44, 0x3c, 0x0,  /* ASC(100) */
	0x0, 0x0, 0x38, 0x44, 0x78, 0x40, 0x3c, 0x0,  /* ASC(101) */
	0x0, 0xc, 0x10, 0x18, 0x10, 0x10, 0x10, 0x0,  /* ASC(102) */
	0x0, 0x0, 0x3c, 0x44, 0x44, 0x3c, 0x4, 0x38,  /* ASC(103) */
	0x0, 0x40, 0x40, 0x78, 0x44, 0x44, 0x44, 0x0,  /* ASC(104) */
	0x0, 0x10, 0x0, 0x30, 0x10, 0x10, 0x38, 0x0,  /* ASC(105) */
	0x0, 0x4, 0x0, 0x4, 0x4, 0x4, 0x24, 0x18,  /* ASC(106) */
	0x0, 0x20, 0x28, 0x30, 0x30, 0x28, 0x24, 0x0,  /* ASC(107) */
	0x0, 0x10, 0x10, 0x10, 0x10, 0x10, 0xc, 0x0,  /* ASC(108) */
	0x0, 0x0, 0x68, 0x54, 0x54, 0x54, 0x54, 0x0,  /* ASC(109) */
	0x0, 0x0, 0x78, 0x44, 0x44, 0x44, 0x44, 0x0,  /* ASC(110) */
	0x0, 0x0, 0x38, 0x44, 0x44, 0x44, 0x38, 0x0,  /* ASC(111) */
	0x0, 0x0, 0x78, 0x44, 0x44, 0x78, 0x40, 0x40,  /* ASC(112) */
	0x0, 0x0, 0x3c, 0x44, 0x44, 0x3c, 0x4, 0x6,  /* ASC(113) */
	0x0, 0x0, 0x1c, 0x20, 0x20, 0x20, 0x20, 0x0,  /* ASC(114) */
	0x0, 0x0, 0x38, 0x40, 0x38, 0x4, 0x78, 0x0,  /* ASC(115) */
	0x0, 0x10, 0x38, 0x10, 0x10, 0x10, 0xc, 0x0,  /* ASC(116) */
	0x0, 0x0, 0x44, 0x44, 0x44, 0x44, 0x38, 0x0,  /* ASC(117) */
	0x0, 0x0, 0x44, 0x44, 0x28, 0x28, 0x10, 0x0,  /* ASC(118) */
	0x0, 0x0, 0x44, 0x54, 0x54, 0x54, 0x28, 0x0,  /* ASC(119) */
	0x0, 0x0, 0x44, 0x28, 0x10, 0x28, 0x44, 0x0,  /* ASC(120) */
	0x0, 0x0, 0x44, 0x44, 0x44, 0x3c, 0x4, 0x38,  /* ASC(121) */
	0x0, 0x0, 0x7c, 0x8, 0x10, 0x20, 0x7c, 0x0,  /* ASC(122) */
	0x0, 0xe, 0x8, 0x30, 0x8, 0x8, 0xe, 0x0,  /* ASC(123) */
	0x0, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x0,  /* ASC(124) */
	0x0, 0x70, 0x10, 0xc, 0x10, 0x10, 0x70, 0x0,  /* ASC(125) */
	0x0, 0x14, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(126) */
	0x3c, 0x42, 0x99, 0xa1, 0xa1, 0x99, 0x42, 0x3c, /* ASC(127) */
	
	/* Block graphics */
	0x00, 0x00, 0x00, 0x00, 0x0, 0x0, 0x0, 0x0,  /* ASC(128) */
	0x0f, 0x0f, 0x0f, 0x0f, 0x0, 0x0, 0x0, 0x0,
	0xf0, 0xf0, 0xf0, 0xf0, 0x0, 0x0, 0x0, 0x0,
	0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0f, 0x0f, 0x0f, 0x0f,
	0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
	0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f,
	0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f,
	0x0, 0x0, 0x0, 0x0, 0xf0, 0xf0, 0xf0, 0xf0,
	0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0,
	0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0,
	0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0,
	0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff,
	0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff,
	0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,  /* ASC(143) */
	
	/* User defined graphics */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(144) */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(164) */
	
	/* Keywords */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  /* ASC(165) */
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0  /* ASC(255) */
};

int rbxeGetBit(unsigned char b, unsigned char number) {
    return (b >> number) & 1;
}

void rbxeFontInit(void) {
	#define BEGIN_OF_UDG 144*8
	#define CHARA 65*8

	/* Initialize user defined characters by copy A to U */
	unsigned char* p = rbxeFont;
	memcpy(p+BEGIN_OF_UDG, p+CHARA, 8*19);
}

void rbxeFontDrawChar(int x, int y, const unsigned char ch, Pixel fg, Pixel bg) {
    int width, height;
    unsigned char* buffer;
    int w, h, offset;
    unsigned char* dest;
	int xStart, ix, iy;
    unsigned char line;

    buffer = (unsigned char *)rbxeGetBuffer();
    rbxeScreenSize(&width, &height);

    w = 8;
    h = 8;
    offset = (int)ch * 8;

	if (ch > 164) {
		offset = 0;
	}
	
    dest = buffer + (y+8) * (width*4) + (x*4);

	xStart = x;
    iy = 0, ix = 0;

    for (iy = 0; iy < h; iy++) {
        line = rbxeFont[offset+iy];

        for (ix = w-1; ix >= 0; ix--) {
			if (x >= 0 && x < width && y >= 0 && y < height) {
 				if (rbxeGetBit(line, ix)) {
					/* Draw pixel */
					*dest = fg.r; dest++;
					*dest = fg.g; dest++;
					*dest = fg.b; dest++;
					*dest = fg.a; dest++;
				}
				else {
					/* Erase pixel */
					*dest = bg.r; dest++;
					*dest = bg.g; dest++;
					*dest = bg.b; dest++;
					*dest = bg.a; dest++;
				}
			}
			
			/* Next pixel */
			x++;
        }
        
        /* Next line */
        y--;
		x = xStart;
		
        dest = buffer + y * (width*4) + (x*4);
    }
}

void rbxeFontDrawString(int x, int y, char* str, Pixel fg, Pixel bg) {
	while (*str != 0) {
		char ch = *str;
	
		rbxeFontDrawChar(x, y, ch, fg, bg);

        x+=8;	
		str++;
	}
}

#endif /* RBXE_ENGINE */
#endif /* RB_PIXEL_ENGINE_FONT_H */
